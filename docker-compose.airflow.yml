version: '3.8'

services:

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    networks:
      - airflow-network

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - ./data_extraction/airflow.env
    ports:
      - "8081:8080"
    networks:
      - airflow-network
      - vault-network
    command: webserver
    volumes:
      - ./data_extraction/dags:/opt/airflow/dags
      - ./shared-secrets:/shared-secrets

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    depends_on:
      - postgres
      - redis
      - airflow-webserver
    env_file:
      - ./data_extraction/airflow.env
    networks:
      - airflow-network
      - vault-network
    command: scheduler
    volumes:
      - ./data_extraction/dags:/opt/airflow/dags
      - ./shared-secrets:/shared-secrets

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-worker
    depends_on:
      - postgres
      - redis
      - airflow-webserver
    env_file:
      - ./data_extraction/airflow.env
    networks:
      - airflow-network
      - vault-network
    command: celery worker
    volumes:
      - ./data_extraction/dags:/opt/airflow/dags
      - ./shared-secrets:/shared-secrets

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./data_extraction/airflow.env
    entrypoint: /bin/bash -c "airflow db init && airflow users create --username admin --password admin --firstname Airflow --lastname Admin --role Admin --email admin@example.com"
    networks:
      - airflow-network
      - vault-network 
    volumes:
      - ./data_extraction/dags:/opt/airflow/dags
      - ./shared-secrets:/shared-secrets

networks:
  airflow-network:
    driver: bridge
  vault-network:
